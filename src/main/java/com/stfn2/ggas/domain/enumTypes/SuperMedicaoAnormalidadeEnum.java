package com.stfn2.ggas.domain.enumTypes;

import lombok.Getter;

@Getter
public enum SuperMedicaoAnormalidadeEnum {

   QUANTIDADE_REGISTROS_HORARIOS_INFERIOR(1L, "QUANTIDADE DE REGISTROS HORARIOS INFERIOR A 24 MEDICOES HORARIAS"),
   QUANTIDADE_REGISTROS_HORARIOS_SUPERIOR(2L, "QUANTIDADE DE REGISTROS HORARIOS SUPERIOR A 24 MEDICOES HORARIAS"),
   REGISTRO_HORA_FRACIONADA(3L, "REGISTRO DE HORA FRACIONADA PARA A MEDICAO"),
   VOLUME_CONSOLIDADO_DIVERGE(4L, "VOLUME CONSOLIDADO DIVERGE DO VOLUME INFORMADO PARA O DIA"),
   REGISTRO_SUBSTITUICAO_CORRETOR_VAZAO(5L, "REGISTRO DE SUBSTITUICAO DE CORRETOR DE VAZAO NO DIA"),
   PRIMEIRO_DIA_MEDICAO(6L, "PRIMEIRO DIA DE MEDICAO"),
   VIRADA_MOSTRADOR_CORRETOR_VAZAO(7L, "VIRADA DO MOSTRADOR DO CORRETOR DE VAZAO"),
   CICLO_MEDICAO_INCOMPLETO(8L, "CICLO DE MEDICAO INCOMPLETO"),
   PONTO_CONSUMO_NAO_POSSUI_CORRETOR_VAZAO(9L, "PONTO DE CONSUMO NAO POSSUI CORRETOR DE VAZAO INSTALADO"),
   PONTO_CONSUMO_NAO_POSSUI_CONTRATO_FATURAVEL(10L, "PONTO DE CONSUMO NAO POSSUI CONTRATO FATURAVEL"),
   PONTO_CONSUMO_NAO_IDENTIFICADO(11L, "PONTO DE CONSUMO NAO IDENTIFICADO"),
   POSSIVEL_VIRADA_SEM_CORRETOR_VAZAO(12L, "POSSIVEL VIRADA SEM CORRETOR DE VAZAO"),
   REGISTRO_DIARIO_NAO_ENCONTRADO(13L, "REGISTRO DIARIO NAO ENCONTRADO"),
   LEITURA_ANTERIOR_NAO_ENCONTRADA(14L, "LEITURA ANTERIOR NAO ENCONTRADA"),
   PONTO_CONSUMO_SEM_FORNECIMENTO_ATIVO(16L, "PONTO DE CONSUMO SEM FORNECIMENTO ATIVO"),
   REGISTRO_DUPLICADO(18L, "REGISTRO DUPLICADO"),
   NAO_POSSIVEL_CALCULAR_FATOR(19L, "NAO E POSSÍVEL CALCULAR O FATOR"),
   REGISTRO_ALTERADO(17L, "Registro alterado"),
   CRONOGRAMA_FATURAMENTO_NAO_ENCONTRADO(20L, "CRONOGRAMA DE FATURAMENTO NAO ENCONTRADO"),
   ENDERECO_REMOTO_NAO_LOCALIZADO(21L, "ENDERECO REMOTO NAO LOCALIZADO NO GGAS"),
   NAO_EXISTE_MEDIDOR_VIRTUAL(22L, "NAO EXISTE MEDIDOR VIRTUAL PARA MEDIDOR INDEPENDENTE"),
   NAO_EXISTE_PONTO_CONSUMO_MEDIDOR_VIRTUAL(23L, "NAO EXISTE PONTO CONSUMO PARA MEDIDOR VIRTUAL"),
   MEDIDOR_INDEPENDENTE_SEM_CORRETOR_VAZAO(24L, "MEDIDOR INDEPENDENTE SEM CORRETOR VAZAO INSTALADO"),
   PONTOS_CONSUMO_NAO_MESMO_GRUPO_FATURAMENTO(25L, "PONTOS DE CONSUMO NAO POSSUEM MESMO GRUPO FATURAMENTO"),
   PONTOS_CONSUMO_NAO_MESMA_HORA_INICIAL_LEITURA(26L, "PONTOS DE CONSUMO NAO POSSUEM MESMA HORA INICIAL LEITURA"),
   NAO_EXISTE_MEDIDOR_INDEPENDENTE_INSTALADO(27L, "NAO EXISTE MEDIDOR INDEPENDENTE INSTALADO"),
   MEDIÇÃO_COM_CONSUMO_NEGATIVO(28L, "MEDIÇÃO COM CONSUMO NEGATIVO"),
   VIRADA_MEDIDOR(29L, "VIRADA DE MEDIDOR");

   private final Long id;
   private final String descricao;

   SuperMedicaoAnormalidadeEnum(Long id, String descricao) {
      this.id = id;
      this.descricao = descricao;
   }

   public static SuperMedicaoAnormalidadeEnum toEnum(Long id) {
      if(id==null) {
         return null;
      }

      for (SuperMedicaoAnormalidadeEnum x : SuperMedicaoAnormalidadeEnum.values()) {
         if(id.equals(x.getId())) {
            return x;
         }
      }
      throw new IllegalArgumentException("Id inválido: " + id);
   }
}
